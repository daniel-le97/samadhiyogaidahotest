import{p as s,C as p}from"./compressor.esm.0d3c567c.js";import{v as c,A as o,P as g}from"./index.c90a785d.js";class u{async getFiles(){const e=await s.collection("aug22Retreat").getFullList();c.log(e);let t=[];e.forEach(a=>{t.push(a.url)})}async uploadFile(e,t){const a=Array.from(e.target.files);o.loading=a.length;for await(const i of a){let l=new FormData,m=await this.compress(i);l.append("file",m);const r=await this.createFile(l,t.name),n=await s.getFileUrl(r,r.file,{thumb:"500x500"});await s.collection(t.name).update(r.id,{url:n}),c.log({uncompressed:i.size/1e6+"mb",compressed:m.size/1e3+"kb",url:n}),o.uploadedImgs.push(n),o.loading--}}async compress(e){let t=null;return await new Promise((a,i)=>{new p(e,{quality:.5,success(l){t=l,a()}})}),t}async createFile(e,t){try{return await s.collection(t).create(e)}catch(a){g.error(a,"please contact an admin")}}async getPastRetreats(){(await s.collection("aug22Retreat").getFullList()).forEach(t=>o.aug22RetreatImages.push(t.url)),c.log(o.aug22RetreatImages)}async createCollection(e){const t=await s.collections.getOne("default"),a=await s.collections.create({name:e,type:t.type,schema:t.schema});o.collections=[...o.collections,a]}async getCollections(){let e=await(await s.collections.getList()).items;e=e.filter(t=>t.name!="users"),c.log(e),o.collections=e}}const h=new u;export{h as pocketBaseService};
